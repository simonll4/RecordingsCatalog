services:
  postgres:
    image: postgres:15-alpine
    container_name: tpfinalv3-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: session_store
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      TZ: UTC
    ports:
      - "15432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./services/session-store/migrations:/docker-entrypoint-initdb.d:ro
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  mediamtx:
    image: bluenviron/mediamtx:latest-ffmpeg
    container_name: tpfinalv3-mediamtx
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_started
    environment:
      TZ: UTC
    ports:
      - "8554:8554" # RTSP ingest
      - "9996:9996" # Playback API (recordings)
    volumes:
      - ./services/mediamtx/mediamtx.yml:/mediamtx.yml:ro
      - ./data/recordings:/recordings
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

  session-store:
    build:
      context: ./services/session-store
    container_name: tpfinalv3-session-store
    restart: unless-stopped
    environment:
      TZ: UTC
    ports:
      - "8080:8080"
    volumes:
      - ./data/frames:/data/frames
      - ./data/tracks:/data/tracks
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      postgres:
        condition: service_healthy

  # worker-ai:
  #   build:
  #     context: ./services/worker-ai
  #   container_name: tpfinalv3-worker-ai
  #   restart: unless-stopped
  #   environment:
  #     TZ: UTC
  #   volumes:
  #     - ./services/worker-ai/data/tracks:/data/tracks  # Tracks persistidos
  #     - ./data/models:/models:ro
  #     - /etc/timezone:/etc/timezone:ro
  #     - /etc/localtime:/etc/localtime:ro
  #   healthcheck:
  #     test: ["CMD", "python3", "healthcheck.py"]
  #     interval: 10s
  #     timeout: 2s
  #     retries: 3

  edge-agent:
    build:
      context: ./services/edge-agent
    container_name: tpfinalv3-edge-agent
    restart: on-failure
    depends_on:
      mediamtx:
        condition: service_started
      session-store:
        condition: service_started
      #worker-ai:
        #condition: service_healthy
    environment:
      TZ: UTC
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Permite conectar al worker-ai local
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    # Acceso a cámara - Descomentar para producción con cámara física
    # NOTA: Requiere Docker Engine nativo (no Docker Desktop)
    devices:
      - "/dev/video0:/dev/video0"
      - "/dev/video1:/dev/video1"
    group_add:
      - "44"  # GID del grupo video del host (verificar con: getent group video)
    privileged: true
    profiles: [edge]

  vue-ui:
    build:
      context: ./services/vue-ui
    container_name: tpfinalv3-vue-ui
    restart: unless-stopped
    depends_on:
      session-store:
        condition: service_started
    environment:
      TZ: UTC
    ports:
      - "3000:3000"
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

volumes:
  postgres_data:
